Ext.data.JsonP.Promise({"meta":{},"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/promise.html#Promise' target='_blank'>promise.js</a></div></pre><div class='doc-contents'><p>The world's smallest, most-useless Promise library. A user specifies a\n<code>done()</code> and/or <code>fail()</code> callbacks. The promise is then either resolved as\ndone (<code>resolve()</code>) or failed (<code>resolveFail()</code>), along with any associated\ninput arguments, which are then passed to the registered callbacks.</p>\n\n<p>For example:</p>\n\n<pre class='inline-example '><code>var promise = new Promise();\npromise.done(function (value) {\n    console.log(\"Great success!\", value);\n}).fail(function (error) {\n    console.error(\"Whoawhoawewa!\", error);\n});\nsomeDeeplyNestedAsyncOperation(function (someValue) {\n    if (error === undefined) {\n        promise.resolve(someValue);\n    } else {\n        promise.resolveFail(error);\n    }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Promise'>Promise</span><br/><a href='source/promise.html#Promise-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Promise-method-constructor' class='name expandable'>Promise</a>( <span class='pre'>[context]</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new promise object. ...</div><div class='long'><p>Creates a new promise object. If a context object is provided, the callbacks\nare called with it as their context. Useful for decorating a class as a\npromise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>The callback context</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-done' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Promise'>Promise</span><br/><a href='source/promise.html#Promise-method-done' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Promise-method-done' class='name expandable'>done</a>( <span class='pre'>callback</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Registers a callback for successful resolution of the promise. ...</div><div class='long'><p>Registers a callback for successful resolution of the promise. The\ncallback is called with any values passed to <a href=\"#!/api/Promise-method-resolve\" rel=\"Promise-method-resolve\" class=\"docClass\">resolve</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-fail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Promise'>Promise</span><br/><a href='source/promise.html#Promise-method-fail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Promise-method-fail' class='name expandable'>fail</a>( <span class='pre'>callback</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Registers a callback for failed resolution of the promise. ...</div><div class='long'><p>Registers a callback for failed resolution of the promise. The\ncallback is called with any values passed to <a href=\"#!/api/Promise-method-resolveFail\" rel=\"Promise-method-resolveFail\" class=\"docClass\">resolveFail</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-resolve' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Promise'>Promise</span><br/><a href='source/promise.html#Promise-method-resolve' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Promise-method-resolve' class='name expandable'>resolve</a>( <span class='pre'>arguments</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Resolve the promise as successful. ...</div><div class='long'><p>Resolve the promise as successful.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arguments</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>The value(s) with which to resolve.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul></ul></div></div></div><div id='method-resolveFail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Promise'>Promise</span><br/><a href='source/promise.html#Promise-method-resolveFail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Promise-method-resolveFail' class='name expandable'>resolveFail</a>( <span class='pre'>arguments</span> ) : <a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Resolve the promise as failed. ...</div><div class='long'><p>Resolve the promise as failed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arguments</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a><div class='sub-desc'><p>The value(s) with which to resolve.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Promise\" rel=\"Promise\" class=\"docClass\">Promise</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul><h3 class='pa'>Fires</h3><ul></ul></div></div></div></div></div></div></div>","component":false,"alternateClassNames":[],"autodetected":{},"aliases":{},"mixedInto":[],"parentMixins":[],"superclasses":[],"members":[{"meta":{},"owner":"Promise","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{"chainable":true},"owner":"Promise","name":"done","id":"method-done","tagname":"method"},{"meta":{"chainable":true},"owner":"Promise","name":"fail","id":"method-fail","tagname":"method"},{"meta":{"chainable":true},"owner":"Promise","name":"resolve","id":"method-resolve","tagname":"method"},{"meta":{"chainable":true},"owner":"Promise","name":"resolveFail","id":"method-resolveFail","tagname":"method"}],"mixins":[],"subclasses":[],"name":"Promise","requires":[],"id":"class-Promise","tagname":"class","short_doc":"The world's smallest, most-useless Promise library. ...","files":[{"href":"promise.html#Promise","filename":"promise.js"}]});